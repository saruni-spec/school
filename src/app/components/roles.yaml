
enum roles_available {
 admin-[admin]
 registrar-[register,update,review]
 auditor-[review]
 principal-[admin_school]
 school_admin-[admin_school]
 vice_pricipal-[review_school, update_school,admin_department,register_exam,admin_events,review_exam,update_exam,register_facility,update_facility,review_facility,register_finance,review_finance,update_finance,review_self,update_self]
 head_of_department-[admin_department,review_school,update_school,register_exam,update_exam,review_exam,register_events,update_events,update_exam,review_events,register_facility,update_facility,review_facility,register_finance,review_finance,update_finance,review_self,update_self]
 exam_officer-[admin_exam]
 event_manager-[admin_events]
 finance_officer-[admin_finance]
 facility_manager-[admin_facility]
 librarian-[admin_lib]
 secretary-[review_department, update_department,register_department,review_facility,update_events,review_events,register_events,review_exam,update_exam,register_exam,review_self,update_self]
 staff-[review_department,review_self,update_self,review_events,review_exam,review_facility]
 class_teacher-[review_department,review_stream,update_stream,register_student_parent,review_student_parent,update_student_parent,review_self,update_self,review_events,review_exam,update_exam,review_facility,register_student_parent,review_student_parent,update_student_parent]
 teacher-[review_department,review_stream,update_stream,review_student_parent,update_student_parent,review_self,update_self,review_events,review_exam,update_exam,review_facility]
 faculty-[review_department,review_self,update_self,review_events,review_exam,review_facility]
 parent-[review_stream,review_self,update_self,review_events,review_exam,review_facility]
 student-[review_stream,review_self, update_self,review_events,review_exam,review_facility,review_teacher]
 non_faculty-[review_department,review_facility,review-self,review_events]
 security-[review_facility,review_self,update_self,review_events,review_users]
 accounting-[register_finance,review_finance,update_finance,review_self,update_self,review_events]
 human_resource-[register_users,review_users,update_users,review_self,update_self,review_events]
 doctor-[admin_medical,review_users,review_self,update_self,review_events]
 chef-[review_facility,update_facility,review_self,update_self,review_events]
 assistant_librarian-[review_lib,update_lib,review_self,update_self,review_events]
 admmissions-[register_users,review_users,update_users,review_self,update_self,review_events]
 counselor-[review_student_parent,update_medical,review_medical,review_self,update_self,review_events]
}


enum privileges {
  admin
  review
  update
  register

  admin_school
  review_school
  update_school

register_users
  update_users
  review_users

  register_student_parent
  review_student_parent
  update_student_parent

  register_events
  admin_events
  review_events
  update_events



register_department
  admin_department
  review_department
  update_department

register_facility
  admin_facility
  review_facility
  update_facility

register_finance
  admin_finance
  review_finance
  update_finance

  register_exam
  admin_exam
  review_exam
  update_exam

register_class
  admin_class
  review_class
  update_class


  review_stream
  update_stream

  register_medical
  admin_medical
  review_medical
  update_medical


  admin_lib
  review_lib
  update_lib

  review_self
  update_self
}


// Role to RoleType mapping
admin               -> RoleType.SYSTEM_ADMIN
registrar           -> RoleType.REGISTRAR
auditor             -> RoleType.AUDITOR
principal           -> RoleType.PRINCIPAL
school_admin        -> RoleType.SCHOOL_ADMIN
vice_principal      -> RoleType.VICE_PRINCIPAL
head_of_department  -> RoleType.HEAD_OF_DEPARTMENT
exam_officer        -> RoleType.EXAM_OFFICER
event_manager       -> RoleType.EVENT_MANAGER
finance_officer     -> RoleType.FINANCE_OFFICER
facility_manager    -> RoleType.FACILITY_MANAGER
librarian           -> RoleType.LIBRARIAN
secretary           -> RoleType.SECRETARY
staff               -> RoleType.STAFF
class_teacher       -> RoleType.CLASS_TEACHER
teacher             -> RoleType.TEACHER
faculty             -> RoleType.TEACHER  // Combined with teacher
parent              -> RoleType.PARENT
student             -> RoleType.STUDENT
non_faculty         -> RoleType.STAFF    // Merged with staff
security            -> RoleType.SECURITY
accounting          -> RoleType.FINANCE_OFFICER  // Merged
human_resource      -> RoleType.HUMAN_RESOURCE
doctor              -> RoleType.MEDICAL_STAFF
chef                -> RoleType.FACILITY_MANAGER // Merged
assistant_librarian -> RoleType.LIBRARIAN  // Merged
admissions          -> RoleType.ADMISSIONS
counselor           -> RoleType.COUNSELOR











// Example Permission Configurations

// System Admin: Full access everywhere
Role: SYSTEM_ADMIN
Permissions: [
  {
    resource: SystemResource.SCHOOL,
    can_admin: true,
    can_create: true,
    can_read: true,
    can_update: true,
    can_delete: true,
    scope: PrivilegeScope.GLOBAL
  },
  // ... similar permissions for all resources
]

// Principal: School-wide management
Role: PRINCIPAL
Permissions: [
  {
    resource: SystemResource.SCHOOL,
    can_admin: true,
    can_read: true,
    can_update: true,
    scope: PrivilegeScope.GLOBAL
  },
  {
    resource: SystemResource.DEPARTMENTS,
    can_read: true,
    can_update: true,
    scope: PrivilegeScope.DEPARTMENTAL
  },
  // Other selective permissions
]

// Vice Principal: Comprehensive school oversight
Role: VICE_PRINCIPAL
Permissions: [
  {
    resource: SystemResource.SCHOOL,
    can_read: true,
    can_update: true,
    scope: PrivilegeScope.GLOBAL
  },
  {
    resource: SystemResource.DEPARTMENTS,
    can_admin: true,
    scope: PrivilegeScope.DEPARTMENTAL
  },
  {
    resource: SystemResource.EXAMS,
    can_read: true,
    can_update: true,
    scope: PrivilegeScope.DEPARTMENTAL
  },
  {
    resource: SystemResource.EVENTS,
    can_admin: true,
    scope: PrivilegeScope.DEPARTMENTAL
  },
  // More granular permissions
]

// Teacher: Limited operational access
Role: TEACHER
Permissions: [
  {
    resource: SystemResource.DEPARTMENTS,
    can_read: true,
    scope: PrivilegeScope.DEPARTMENTAL
  },
  {
    resource: SystemResource.STUDENTS,
    can_read: true,
    scope: PrivilegeScope.DEPARTMENTAL
  },
  {
    resource: SystemResource.CLASSES,
    can_read: true,
    can_update: true,
    scope: PrivilegeScope.DEPARTMENTAL
  },
  {
    resource: SystemResource.SELF,
    can_read: true,
    can_update: true,
    scope: PrivilegeScope.PERSONAL
  }
]

// Student: Very limited access
Role: STUDENT
Permissions: [
  {
    resource: SystemResource.SELF,
    can_read: true,
    can_update: true,
    scope: PrivilegeScope.PERSONAL
  },
  {
    resource: SystemResource.CLASSES,
    can_read: true,
    scope: PrivilegeScope.DEPARTMENTAL
  },
  {
    resource: SystemResource.EVENTS,
    can_read: true,
    scope: PrivilegeScope.DEPARTMENTAL
  }
]

// Parent: Limited view of student information
Role: PARENT
Permissions: [
  {
    resource: SystemResource.STUDENTS,
    can_read: true,
    scope: PrivilegeScope.PERSONAL  // Only their own children
  },
  {
    resource: SystemResource.EVENTS,
    can_read: true,
    scope: PrivilegeScope.DEPARTMENTAL
  }
]