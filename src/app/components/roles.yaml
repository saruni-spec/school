# Role Permissions Mapping

## Key Observations
1. We'll align the permissions with the `system_resource` and CRUD operations
2. We'll use privilege scopes to define the extent of each permission
3. We'll categorize roles using the `role_type` and `privilege_category`

## Detailed Role Permissions Mapping

### System Administrator
- **Role Type**: SYSTEM_ADMINISTRATOR
- **Privilege Category**: SYSTEM_ADMIN
- **Permissions**:
  - All resources (SYSTEM, INSTITUTION, USERS, etc.)
  - Global scope
  - Full CRUD (admin) access

### Principal
- **Role Type**: PRINCIPAL
- **Privilege Category**: EXECUTIVE
- **Permissions**:
  - Primary resources: INSTITUTION, DEPARTMENTS, STUDENTS, STAFF
  - Institutional scope
  - Full read and update access
  - Selective admin access for critical systems

### Vice Principal
- **Role Type**: VICE_PRINCIPAL
- **Privilege Category**: EXECUTIVE
- **Permissions**:
  - Resources: INSTITUTION, DEPARTMENTS, EVENTS, EXAMINATIONS, FACILITIES
  - Institutional scope
  - Comprehensive read and update access
  - Limited admin access for academic and administrative systems

### Head of Department
- **Role Type**: HEAD_OF_DEPARTMENT
- **Privilege Category**: ADMINISTRATIVE
- **Permissions**:
  - Primary resources: DEPARTMENTS, CURRICULUM, STUDENTS, EXAMINATIONS
  - Departmental scope
  - Full read and update access
  - Limited create and delete permissions

### Exam Officer
- **Role Type**: EXAM_CONTROLLER
- **Privilege Category**: OPERATIONAL
- **Permissions**:
  - Resource: EXAMINATIONS
  - Departmental scope
  - Full read and update access
  - Limited create permissions

### Class Teacher
- **Role Type**: CLASS_TEACHER
- **Privilege Category**: SUPERVISORY
- **Permissions**:
  - Resources: STUDENTS, STREAM, EVENTS, EXAMINATIONS
  - Class/Stream scope
  - Read and update access for student and class-related information
  - Review capabilities for events and exams

### Teacher
- **Role Type**: TEACHER
- **Privilege Category**: OPERATIONAL
- **Permissions**:
  - Resources: STREAM, STUDENTS, EVENTS, EXAMINATIONS
  - Departmental/Stream scope
  - Read access
  - Limited update for personal teaching activities

### Parent
- **Role Type**: PARENT
- **Privilege Category**: PERSONAL
- **Permissions**:
  - Resources: STREAM, STUDENTS, EVENTS, EXAMINATIONS
  - Personal scope
  - Read-only access to child's information
  - Event and examination review

### Student
- **Role Type**: STUDENT
- **Privilege Category**: PERSONAL
- **Permissions**:
  - Resources: STREAM, PERSONAL_INFORMATION, EVENTS, EXAMINATIONS
  - Personal scope
  - Read and update self-information
  - Review events and examinations

### Facility Manager
- **Role Type**: FACILITY_MANAGER
- **Privilege Category**: OPERATIONAL
- **Permissions**:
  - Resource: FACILITIES
  - Institutional scope
  - Full CRUD access for facilities

### Finance Officer
- **Role Type**: FINANCIAL_OFFICER
- **Privilege Category**: ADMINISTRATIVE
- **Permissions**:
  - Resource: FINANCES
  - Institutional scope
  - Full read and update access
  - Limited admin capabilities

### Human Resource
- **Role Type**: HUMAN_RESOURCES_MANAGER
- **Privilege Category**: ADMINISTRATIVE
- **Permissions**:
  - Resources: USERS, STAFF
  - Institutional scope
  - User management (create, read, update)
  - Review access to various institutional resources

### Secretary
- **Role Type**: ADMINISTRATIVE_STAFF
- **Privilege Category**: ADMINISTRATIVE
- **Permissions**:
  - Resources: DEPARTMENTS, FACILITIES, EVENTS, EXAMINATIONS, USERS
  - Departmental scope
  - Comprehensive review access
  - Limited create and update permissions for department, events, and user-related information

### Non-Faculty Staff
- **Role Type**: ADMINISTRATIVE_STAFF
- **Privilege Category**: OPERATIONAL
- **Permissions**:
  - Resources: DEPARTMENTS, FACILITIES, EVENTS
  - Departmental scope
  - Review-only access
  - Limited to operational information

### Event Manager
- **Role Type**: EVENT_COORDINATOR
- **Privilege Category**: OPERATIONAL
- **Permissions**:
  - Resource: EVENTS
  - Institutional scope
  - Full read and update access
  - Create and manage event-related information

### Librarian
- **Role Type**: LIBRARIAN
- **Privilege Category**: OPERATIONAL
- **Permissions**:
  - Resource: LIBRARY
  - Institutional scope
  - Full administrative access to library resources
  - Manage library-related user interactions

### Assistant Librarian
- **Role Type**: LIBRARIAN
- **Privilege Category**: OPERATIONAL
- **Permissions**:
  - Resource: LIBRARY
  - Departmental scope
  - Review and update library resources
  - Support primary librarian's activities

### Admissions Officer
- **Role Type**: ADMISSIONS_OFFICER
- **Privilege Category**: ADMINISTRATIVE
- **Permissions**:
  - Resources: USERS, STUDENTS, ADMISSIONS
  - Institutional scope
  - Full create, read, and update access for admission-related processes
  - Review user and student information

### Counselor
- **Role Type**: COUNSELOR
- **Privilege Category**: SUPERVISORY
- **Permissions**:
  - Resources: STUDENTS, MEDICAL, USERS
  - Departmental scope
  - Review and update medical information
  - Limited access to student and parent records
  - Focus on student well-being and support

### Doctor/Medical Staff
- **Role Type**: MEDICAL_STAFF
- **Privilege Category**: OPERATIONAL
- **Permissions**:
  - Resources: MEDICAL, USERS, STUDENTS
  - Departmental scope
  - Full administrative access to medical records
  - Review and update medical information

### Chef
- **Role Type**: ADMINISTRATIVE_STAFF
- **Privilege Category**: OPERATIONAL
- **Permissions**:
  - Resources: FACILITIES
  - Departmental scope
  - Review and update facility-related information
  - Focus on food service and related facilities

### School Administrator
- **Role Type**: SCHOOL_ADMINISTRATOR
- **Privilege Category**: ADMINISTRATIVE
- **Permissions**:
  - Resources: INSTITUTION, DEPARTMENTS, STUDENTS, STAFF, EVENTS, EXAMINATIONS, FACILITIES, FINANCES
  - School/Institutional scope
  - Comprehensive administrative access
  - Full CRUD (Create, Read, Update, Delete) permissions for most institutional resources
  - Key responsibilities include:
    * Overseeing school-wide operations
    * Managing departmental structures
    * Coordinating institutional events
    * Supervising financial resources
    * Managing staff and student information
  - Selective global access within the school's context
  - Ability to create and modify school-level configurations
  - Limited by the broader institutional policies defined by system or executive administrators

### Security Personnel
- **Role Type**: SECURITY_PERSONNEL
- **Privilege Category**: SUPERVISORY
- **Permissions**:
  - Resources: FACILITIES, USERS
  - Institutional scope
  - Review and limited update capabilities

## Implementation Notes
1. Use the `permission` model to granularly define each role's access
2. Leverage `scope` to control the extent of permissions
3. Use boolean flags (`can_admin`, `can_create`, etc.) for fine-grained access control
4. Consider using department, school, or facility IDs to further restrict permissions

## Recommendations
- Implement a hierarchical permission system
- Use role inheritance where possible
- Regularly audit and update role permissions
- Implement logging for critical administrative actions



##roles sql
-- Seed Data for Roles Table
-- This script populates the roles table with predefined roles

-- Disable foreign key checks to allow seeding
SET session_replication_role = 'replica';

-- Insert roles with their corresponding types and categories
INSERT INTO "role" (type, name, description, category)
VALUES 
    -- System-Level Roles
    ('SYSTEM_ADMINISTRATOR', 'System Administrator', 'Absolute system control and management', 'SYSTEM_ADMIN'),

    -- Executive Leadership Roles
    ('PRINCIPAL', 'Principal', 'Top-level institutional leadership', 'EXECUTIVE'),
    ('VICE_PRINCIPAL', 'Vice Principal', 'Deputy institutional leadership', 'EXECUTIVE'),
    ('SCHOOL_ADMINISTRATOR', 'School Administrator', 'Comprehensive school-level administrative management', 'ADMINISTRATIVE'),

    -- Academic Leadership Roles
    ('HEAD_OF_DEPARTMENT', 'Head of Department', 'Department-level academic leadership', 'ADMINISTRATIVE'),
    ('ACADEMIC_REGISTRAR', 'Academic Registrar', 'Academic records and registration management', 'ADMINISTRATIVE'),
    ('EXAM_CONTROLLER', 'Exam Controller', 'Examinations management and coordination', 'OPERATIONAL'),
    ('CURRICULUM_COORDINATOR', 'Curriculum Coordinator', 'Curriculum development and academic standards', 'ADMINISTRATIVE'),

    -- Teaching Roles
    ('TEACHER', 'Teacher', 'Standard teaching position', 'OPERATIONAL'),
    ('CLASS_TEACHER', 'Class Teacher', 'Additional responsibilities for a specific class', 'SUPERVISORY'),
    ('FACULTY_MEMBER', 'Faculty Member', 'Broader academic staff role', 'OPERATIONAL'),

    -- Administrative Roles
    ('ADMINISTRATIVE_STAFF', 'Administrative Staff', 'General administrative support', 'OPERATIONAL'),
    ('SECRETARY', 'Secretary', 'Administrative coordination and support', 'ADMINISTRATIVE'),
    ('FACILITY_MANAGER', 'Facility Manager', 'Facilities management and maintenance', 'OPERATIONAL'),
    ('FINANCIAL_OFFICER', 'Financial Officer', 'Financial management and budgeting', 'ADMINISTRATIVE'),
    ('HUMAN_RESOURCES_MANAGER', 'HR Manager', 'Personnel management and HR operations', 'ADMINISTRATIVE'),
    ('EVENT_COORDINATOR', 'Event Coordinator', 'Event planning and management', 'OPERATIONAL'),

    -- Support and Specialized Roles
    ('LIBRARIAN', 'Librarian', 'Library management and resources', 'OPERATIONAL'),
    ('ASSISTANT_LIBRARIAN', 'Assistant Librarian', 'Support for library operations', 'OPERATIONAL'),
    ('TECHNOLOGY_SUPPORT', 'IT Support', 'Technical support and IT management', 'OPERATIONAL'),
    ('SECURITY_PERSONNEL', 'Security Staff', 'Campus security and safety', 'SUPERVISORY'),

    -- Student and Admission Related Roles
    ('ADMISSIONS_OFFICER', 'Admissions Officer', 'Student admissions management', 'ADMINISTRATIVE'),
    ('COUNSELOR', 'Counselor', 'Student guidance and psychological support', 'SUPERVISORY'),

    -- Medical and Health Roles
    ('MEDICAL_STAFF', 'Medical Staff', 'Healthcare professionals', 'OPERATIONAL'),

    -- Non-Academic Roles
    ('CHEF', 'Chef', 'Food services management', 'OPERATIONAL'),

    -- Student and Parent Roles
    ('STUDENT', 'Student', 'Current enrolled student', 'PERSONAL'),
    ('PARENT', 'Parent', 'Student guardian', 'PERSONAL'),

    -- Audit and Compliance
    ('AUDIT_OFFICER', 'Audit Officer', 'Compliance and internal audit', 'SUPERVISORY');

-- Re-enable foreign key checks
SET session_replication_role = 'origin';

-- Optional: Add a confirmation message
SELECT 'Roles have been successfully seeded.' AS status;



##permissions sql
-- Insert Permissions for Roles

-- Function to get role ID by type
CREATE OR REPLACE FUNCTION get_role_id(role_type_param role_type) RETURNS INTEGER AS $$
DECLARE
    role_id INTEGER;
BEGIN
    SELECT id INTO role_id FROM role WHERE type = role_type_param;
    RETURN role_id;
END;
$$ LANGUAGE plpgsql;

-- Macro for inserting permissions
INSERT INTO permission (
    role_id, 
    resource, 
    scope, 
    can_admin, 
    can_create, 
    can_read, 
    can_update, 
    can_delete
) VALUES
-- System Administrator - Full Global Access
(get_role_id('SYSTEM_ADMINISTRATOR'), 'SYSTEM', 'GLOBAL', true, true, true, true, true),
(get_role_id('SYSTEM_ADMINISTRATOR'), 'INSTITUTION', 'GLOBAL', true, true, true, true, true),
(get_role_id('SYSTEM_ADMINISTRATOR'), 'USERS', 'GLOBAL', true, true, true, true, true),
(get_role_id('SYSTEM_ADMINISTRATOR'), 'STUDENTS', 'GLOBAL', true, true, true, true, true),
(get_role_id('SYSTEM_ADMINISTRATOR'), 'STAFF', 'GLOBAL', true, true, true, true, true),
(get_role_id('SYSTEM_ADMINISTRATOR'), 'DEPARTMENTS', 'GLOBAL', true, true, true, true, true),
(get_role_id('SYSTEM_ADMINISTRATOR'), 'EVENTS', 'GLOBAL', true, true, true, true, true),
(get_role_id('SYSTEM_ADMINISTRATOR'), 'EXAMINATIONS', 'GLOBAL', true, true, true, true, true),
(get_role_id('SYSTEM_ADMINISTRATOR'), 'FACILITIES', 'GLOBAL', true, true, true, true, true),
(get_role_id('SYSTEM_ADMINISTRATOR'), 'FINANCES', 'GLOBAL', true, true, true, true, true),
(get_role_id('SYSTEM_ADMINISTRATOR'), 'MEDICAL', 'GLOBAL', true, true, true, true, true),
(get_role_id('SYSTEM_ADMINISTRATOR'), 'LIBRARY', 'GLOBAL', true, true, true, true, true),
(get_role_id('SYSTEM_ADMINISTRATOR'), 'ACADEMIC_CLASSES', 'GLOBAL', true, true, true, true, true),
(get_role_id('SYSTEM_ADMINISTRATOR'), 'ACADEMIC_STREAMS', 'GLOBAL', true, true, true, true, true),
(get_role_id('SYSTEM_ADMINISTRATOR'), 'ADMISSIONS', 'GLOBAL', true, true, true, true, true),
(get_role_id('SYSTEM_ADMINISTRATOR'), 'CURRICULUM', 'GLOBAL', true, true, true, true, true),
(get_role_id('SYSTEM_ADMINISTRATOR'), 'COMMUNICATION', 'GLOBAL', true, true, true, true, true),

-- Principal - Institutional Scope
(get_role_id('PRINCIPAL'), 'INSTITUTION', 'INSTITUTIONAL', false, false, true, true, false),
(get_role_id('PRINCIPAL'), 'DEPARTMENTS', 'INSTITUTIONAL', false, false, true, true, false),
(get_role_id('PRINCIPAL'), 'STUDENTS', 'INSTITUTIONAL', false, false, true, true, false),
(get_role_id('PRINCIPAL'), 'STAFF', 'INSTITUTIONAL', false, false, true, true, false),
(get_role_id('PRINCIPAL'), 'FINANCES', 'INSTITUTIONAL', false, false, true, true, false),
(get_role_id('PRINCIPAL'), 'EVENTS', 'INSTITUTIONAL', false, false, true, true, false),

-- Vice Principal - Institutional Scope
(get_role_id('VICE_PRINCIPAL'), 'INSTITUTION', 'INSTITUTIONAL', false, false, true, true, false),
(get_role_id('VICE_PRINCIPAL'), 'DEPARTMENTS', 'INSTITUTIONAL', false, false, true, true, false),
(get_role_id('VICE_PRINCIPAL'), 'EVENTS', 'INSTITUTIONAL', false, false, true, true, false),
(get_role_id('VICE_PRINCIPAL'), 'EXAMINATIONS', 'INSTITUTIONAL', false, false, true, true, false),
(get_role_id('VICE_PRINCIPAL'), 'FACILITIES', 'INSTITUTIONAL', false, false, true, true, false),

-- Head of Department - Departmental Scope
(get_role_id('HEAD_OF_DEPARTMENT'), 'DEPARTMENTS', 'DEPARTMENTAL', false, false, true, true, false),
(get_role_id('HEAD_OF_DEPARTMENT'), 'CURRICULUM', 'DEPARTMENTAL', false, true, true, true, false),
(get_role_id('HEAD_OF_DEPARTMENT'), 'STUDENTS', 'DEPARTMENTAL', false, false, true, true, false),
(get_role_id('HEAD_OF_DEPARTMENT'), 'EXAMINATIONS', 'DEPARTMENTAL', false, false, true, true, false),

-- Exam Controller - Departmental Scope for Examinations
(get_role_id('EXAM_CONTROLLER'), 'EXAMINATIONS', 'DEPARTMENTAL', false, true, true, true, false),

-- Class Teacher - Class/Stream Scope
(get_role_id('CLASS_TEACHER'), 'STUDENTS', 'PERSONAL', false, false, true, true, false),
(get_role_id('CLASS_TEACHER'), 'ACADEMIC_STREAMS', 'DEPARTMENTAL', false, false, true, true, false),
(get_role_id('CLASS_TEACHER'), 'EVENTS', 'DEPARTMENTAL', false, false, true, false, false),
(get_role_id('CLASS_TEACHER'), 'EXAMINATIONS', 'DEPARTMENTAL', false, false, true, false, false),

-- Teacher - Departmental Scope
(get_role_id('TEACHER'), 'ACADEMIC_STREAMS', 'DEPARTMENTAL', false, false, true, true, false),
(get_role_id('TEACHER'), 'STUDENTS', 'DEPARTMENTAL', false, false, true, false, false),
(get_role_id('TEACHER'), 'EVENTS', 'DEPARTMENTAL', false, false, true, false, false),
(get_role_id('TEACHER'), 'EXAMINATIONS', 'DEPARTMENTAL', false, false, true, false, false),

-- Parent - Personal Scope
(get_role_id('PARENT'), 'STUDENTS', 'PERSONAL', false, false, true, false, false),
(get_role_id('PARENT'), 'ACADEMIC_STREAMS', 'PERSONAL', false, false, true, false, false),
(get_role_id('PARENT'), 'EVENTS', 'PERSONAL', false, false, true, false, false),
(get_role_id('PARENT'), 'EXAMINATIONS', 'PERSONAL', false, false, true, false, false),

-- Student - Personal Scope
(get_role_id('STUDENT'), 'STUDENTS', 'PERSONAL', false, false, true, true, false),
(get_role_id('STUDENT'), 'ACADEMIC_STREAMS', 'PERSONAL', false, false, true, false, false),
(get_role_id('STUDENT'), 'EVENTS', 'PERSONAL', false, false, true, false, false),
(get_role_id('STUDENT'), 'EXAMINATIONS', 'PERSONAL', false, false, true, false, false),

-- Facility Manager - Institutional Scope
(get_role_id('FACILITY_MANAGER'), 'FACILITIES', 'INSTITUTIONAL', false, true, true, true, true),

-- Finance Officer - Institutional Scope
(get_role_id('FINANCIAL_OFFICER'), 'FINANCES', 'INSTITUTIONAL', false, false, true, true, false),

-- Human Resources Manager - Institutional Scope
(get_role_id('HUMAN_RESOURCES_MANAGER'), 'USERS', 'INSTITUTIONAL', false, true, true, true, false),
(get_role_id('HUMAN_RESOURCES_MANAGER'), 'STAFF', 'INSTITUTIONAL', false, true, true, true, false),

-- Administrative Staff (Secretary) - Departmental Scope
(get_role_id('SECRETARY'), 'DEPARTMENTS', 'DEPARTMENTAL', false, false, true, true, false),
(get_role_id('SECRETARY'), 'FACILITIES', 'DEPARTMENTAL', false, false, true, true, false),
(get_role_id('SECRETARY'), 'EVENTS', 'DEPARTMENTAL', false, true, true, true, false),
(get_role_id('SECRETARY'), 'EXAMINATIONS', 'DEPARTMENTAL', false, false, true, false, false),
(get_role_id('SECRETARY'), 'USERS', 'DEPARTMENTAL', false, false, true, true, false),

-- Event Coordinator - Institutional Scope
(get_role_id('EVENT_COORDINATOR'), 'EVENTS', 'INSTITUTIONAL', false, true, true, true, false),

-- Librarian - Institutional Scope
(get_role_id('LIBRARIAN'), 'LIBRARY', 'INSTITUTIONAL', true, true, true, true, true),

-- Assistant Librarian - Departmental Scope
(get_role_id('ASSISTANT_LIBRARIAN'), 'LIBRARY', 'DEPARTMENTAL', false, false, true, true, false),

-- Admissions Officer - Institutional Scope
(get_role_id('ADMISSIONS_OFFICER'), 'USERS', 'INSTITUTIONAL', false, true, true, true, false),
(get_role_id('ADMISSIONS_OFFICER'), 'STUDENTS', 'INSTITUTIONAL', false, true, true, true, false),
(get_role_id('ADMISSIONS_OFFICER'), 'ADMISSIONS', 'INSTITUTIONAL', false, true, true, true, false),

-- Counselor - Departmental Scope
(get_role_id('COUNSELOR'), 'STUDENTS', 'DEPARTMENTAL', false, false, true, true, false),
(get_role_id('COUNSELOR'), 'MEDICAL', 'DEPARTMENTAL', false, false, true, true, false),
(get_role_id('COUNSELOR'), 'USERS', 'DEPARTMENTAL', false, false, true, false, false),

-- Medical Staff - Departmental Scope
(get_role_id('MEDICAL_STAFF'), 'MEDICAL', 'DEPARTMENTAL', true, true, true, true, true),
(get_role_id('MEDICAL_STAFF'), 'USERS', 'DEPARTMENTAL', false, false, true, true, false),
(get_role_id('MEDICAL_STAFF'), 'STUDENTS', 'DEPARTMENTAL', false, false, true, true, false),

-- School Administrator - Institutional Scope
(get_role_id('SCHOOL_ADMINISTRATOR'), 'INSTITUTION', 'INSTITUTIONAL', true, true, true, true, true),
(get_role_id('SCHOOL_ADMINISTRATOR'), 'DEPARTMENTS', 'INSTITUTIONAL', true, true, true, true, true),
(get_role_id('SCHOOL_ADMINISTRATOR'), 'STUDENTS', 'INSTITUTIONAL', true, true, true, true, true),
(get_role_id('SCHOOL_ADMINISTRATOR'), 'STAFF', 'INSTITUTIONAL', true, true, true, true, true),
(get_role_id('SCHOOL_ADMINISTRATOR'), 'EVENTS', 'INSTITUTIONAL', true, true, true, true, true),
(get_role_id('SCHOOL_ADMINISTRATOR'), 'EXAMINATIONS', 'INSTITUTIONAL', true, true, true, true, true),
(get_role_id('SCHOOL_ADMINISTRATOR'), 'FACILITIES', 'INSTITUTIONAL', true, true, true, true, true),
(get_role_id('SCHOOL_ADMINISTRATOR'), 'FINANCES', 'INSTITUTIONAL', true, true, true, true, true),

-- Security Personnel - Institutional Scope
(get_role_id('SECURITY_PERSONNEL'), 'FACILITIES', 'INSTITUTIONAL', false, false, true, true, false),
(get_role_id('SECURITY_PERSONNEL'), 'USERS', 'INSTITUTIONAL', false, false, true, false, false);


-- Permissions for ACADEMIC_REGISTRAR
INSERT INTO permission (
    role_id, 
    resource, 
    scope, 
    can_read, 
    can_update,
    can_create
) 
SELECT 
    id, 
    resource, 
    'INSTITUTIONAL' as scope,
    true, 
    true,
    true
FROM 
    role, 
    (VALUES 
        ('STUDENTS'::system_resource),
        ('ACADEMIC_CLASSES'::system_resource),
        ('ACADEMIC_STREAMS'::system_resource),
        ('EXAMINATIONS'::system_resource),
        ('ADMISSIONS'::system_resource),
        ('CURRICULUM'::system_resource)
    ) AS resources(resource)
WHERE 
    role.type = 'ACADEMIC_REGISTRAR';

-- Permissions for CURRICULUM_COORDINATOR
INSERT INTO permission (
    role_id, 
    resource, 
    scope, 
    can_read, 
    can_update,
    can_create
) 
SELECT 
    id, 
    resource, 
    'DEPARTMENTAL' as scope,
    true, 
    true,
    true
FROM 
    role, 
    (VALUES 
        ('CURRICULUM'::system_resource),
        ('ACADEMIC_CLASSES'::system_resource),
        ('ACADEMIC_STREAMS'::system_resource),
        ('DEPARTMENTS'::system_resource)
    ) AS resources(resource)
WHERE 
    role.type = 'CURRICULUM_COORDINATOR';

-- Permissions for FACULTY_MEMBER
INSERT INTO permission (
    role_id, 
    resource, 
    scope, 
    can_read, 
    can_update
) 
SELECT 
    id, 
    resource, 
    'DEPARTMENTAL' as scope,
    true, 
    true
FROM 
    role, 
    (VALUES 
        ('ACADEMIC_CLASSES'::system_resource),
        ('STUDENTS'::system_resource),
        ('ACADEMIC_STREAMS'::system_resource),
        ('EXAMINATIONS'::system_resource),
        ('EVENTS'::system_resource)
    ) AS resources(resource)
WHERE 
    role.type = 'FACULTY_MEMBER';

-- Permissions for SECRETARY
INSERT INTO permission (
    role_id, 
    resource, 
    scope, 
    can_read, 
    can_update,
    can_create
) 
SELECT 
    id, 
    resource, 
    'DEPARTMENTAL' as scope,
    true, 
    true,
    true
FROM 
    role, 
    (VALUES 
        ('DEPARTMENTS'::system_resource),
        ('FACILITIES'::system_resource),
        ('EVENTS'::system_resource),
        ('EXAMINATIONS'::system_resource),
        ('USERS'::system_resource)
    ) AS resources(resource)
WHERE 
    role.type = 'SECRETARY';

-- Permissions for ASSISTANT_LIBRARIAN
INSERT INTO permission (
    role_id, 
    resource, 
    scope, 
    can_read, 
    can_update
) 
SELECT 
    id, 
    resource, 
    'DEPARTMENTAL' as scope,
    true, 
    true
FROM 
    role, 
    (VALUES 
        ('LIBRARY'::system_resource)
    ) AS resources(resource)
WHERE 
    role.type = 'ASSISTANT_LIBRARIAN';

-- Permissions for TECHNOLOGY_SUPPORT
INSERT INTO permission (
    role_id, 
    resource, 
    scope, 
    can_read, 
    can_update,
    can_admin
) 
SELECT 
    id, 
    resource, 
    'INSTITUTIONAL' as scope,
    true, 
    true,
    true
FROM 
    role, 
    (VALUES 
        ('SYSTEM'::system_resource),
        ('FACILITIES'::system_resource),
        ('COMMUNICATION'::system_resource)
    ) AS resources(resource)
WHERE 
    role.type = 'TECHNOLOGY_SUPPORT';

-- Permissions for CHEF
INSERT INTO permission (
    role_id, 
    resource, 
    scope, 
    can_read, 
    can_update
) 
SELECT 
    id, 
    resource, 
    'DEPARTMENTAL' as scope,
    true, 
    true
FROM 
    role, 
    (VALUES 
        ('FACILITIES'::system_resource)
    ) AS resources(resource)
WHERE 
    role.type = 'CHEF';

-- Permissions for AUDIT_OFFICER
INSERT INTO permission (
    role_id, 
    resource, 
    scope, 
    can_read,
    can_admin
) 
SELECT 
    id, 
    resource, 
    'GLOBAL' as scope,
    true,
    true
FROM 
    role, 
    (VALUES 
        ('SYSTEM'::system_resource),
        ('INSTITUTION'::system_resource),
        ('USERS'::system_resource),
        ('FINANCES'::system_resource),
        ('EXAMINATIONS'::system_resource),
        ('DEPARTMENTS'::system_resource)
    ) AS resources(resource)
WHERE 
    role.type = 'AUDIT_OFFICER';
